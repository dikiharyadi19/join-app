basePath: /
definitions:
  response.JSONResponse:
    properties:
      code:
        type: string
      data: {}
      error:
        type: string
      latency:
        type: string
      message:
        type: string
      result: {}
      status:
        type: string
      status_code:
        type: integer
    type: object
  service.CreateResourcesReq:
    properties:
      action:
        type: string
      name:
        type: string
      parent_uid:
        type: string
      type:
        type: integer
    type: object
  service.CreateRolesReq:
    properties:
      created_by:
        type: string
      name:
        type: string
    type: object
  service.CreateUsersReq:
    properties:
      bio:
        type: string
      birthdate:
        type: string
      country:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        type: integer
      last_name:
        type: string
      password:
        type: string
      photo:
        type: string
      role_id:
        type: integer
      username:
        type: string
    type: object
  service.GetAccessByRoleUIDResp:
    properties:
      action:
        type: string
      child:
        items:
          $ref: '#/definitions/service.GetAccessByRoleUIDResp'
        type: array
      level:
        type: integer
      name:
        type: string
      parent_id:
        type: string
      type:
        type: integer
      uid:
        type: string
    type: object
  service.GetUsersWithPaginationResp:
    properties:
      pagination:
        $ref: '#/definitions/service.Pagination'
      users:
        items:
          $ref: '#/definitions/service.UserResp'
        type: array
    type: object
  service.LoginReq:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  service.Pagination:
    properties:
      page:
        type: integer
      per_page:
        type: integer
      total_data:
        type: integer
      total_page:
        type: integer
    type: object
  service.UpsertAccessReq:
    properties:
      createdAt:
        type: string
      createdBy:
        type: string
      resources_uid:
        items:
          type: string
        type: array
      role_uid:
        type: string
      updatedAt:
        type: string
      updatedBy:
        type: string
    type: object
  service.UserResp:
    properties:
      birthdate:
        type: string
      email:
        type: string
      name:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Join App API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Join App API
  version: "1.0"
paths:
  /v1/access:
    put:
      description: UpsertAccess for update and insert existing/new access
      parameters:
      - description: Request Upsert Access
        in: body
        name: access
        required: true
        schema:
          $ref: '#/definitions/service.UpsertAccessReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.JSONResponse'
      summary: UpsertAccess
      tags:
      - Access
  /v1/access/{type}:
    get:
      description: GetAccessByRoleUID for get access by role uid
      parameters:
      - description: resource type
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.GetAccessByRoleUIDResp'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAccessByRoleUID
      tags:
      - Access
  /v1/login:
    post:
      description: Login endpoint
      parameters:
      - description: Request Login
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/service.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.JSONResponse'
      summary: Login
      tags:
      - Users
  /v1/logout:
    post:
      description: Logout endpoint
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.JSONResponse'
      security:
      - ApiKeyAuth: []
      summary: Lgout
      tags:
      - Users
  /v1/resources:
    post:
      description: New Resources Registration
      parameters:
      - description: Request Create Resources
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/service.CreateResourcesReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.JSONResponse'
      summary: Create New Resources
      tags:
      - Resources
  /v1/roles:
    post:
      description: Roles registration endpoint
      parameters:
      - description: Request Create Role
        in: body
        name: roles
        required: true
        schema:
          $ref: '#/definitions/service.CreateRolesReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.JSONResponse'
      summary: Create New Roles
      tags:
      - Roles
  /v1/users:
    get:
      description: GetUsersWithPagination for get users detail with limit
      parameters:
      - description: user fullname e.g John Doe
        in: query
        name: name
        type: string
      - description: limit data; default 10
        in: query
        name: limit
        type: integer
      - description: number of page; default 1
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.GetUsersWithPaginationResp'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.JSONResponse'
      summary: GetUsersWithPagination
      tags:
      - Users
    post:
      description: New User Registration
      parameters:
      - description: Request Create User
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/service.CreateUsersReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.JSONResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.JSONResponse'
      summary: Create New User
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
