name: join-apps-ci-cd
run-name: Deploy to 'master' by @${{ github.actor }}

on:
  push:
    branches: ['master', 'develop']

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20

      # - name: Build
      #   run: go build -v ./...

      # - name: Test
      #   run: go test -v ./...

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: yogabagas/join-app:latest

      - name: Deploy to Dev
        uses: appleboy/ssh-action@master
        if: endsWith(github.ref, '/develop')
        with:
          host: ${{ secrets.VPS_DEV_HOST }}
          username: ${{ secrets.VPS_DEV_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull yogabagas/join-app:latest
            docker-compose -f docker-compose-app-dev.yml down --remove-orphans
            docker-compose -f docker-compose-db-dev.yml up -d
            docker-compose -f docker-compose-cache-dev.yml up -d
            docker-compose -f docker-compose-app-dev.yml up -d
            docker image prune -f
            docker cp config/config.prod.json join-app:/app/config/files/config.dev.json

      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        if: endsWith(github.ref, '/master')
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull yogabagas/join-app:latest
            docker-compose -f docker-compose-app-prod.yml down --remove-orphans
            docker-compose -f docker-compose-db-prod.yml up -d
            docker-compose -f docker-compose-cache-prod.yml up -d
            docker-compose -f docker-compose-app-prod.yml up -d
            docker image prune -f
            docker cp config/config.prod.json join-app:/app/config/files/config.prod.json
      
     